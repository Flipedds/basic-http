[{"name":"APPLICATION","description":"database.enums.GeneratedBy.APPLICATION","location":"basic-http/database.enums/-generated-by/-a-p-p-l-i-c-a-t-i-o-n/index.html","searchKeys":["APPLICATION","APPLICATION","database.enums.GeneratedBy.APPLICATION"]},{"name":"AUT0_INCREMENT","description":"database.enums.GeneratedBy.AUT0_INCREMENT","location":"basic-http/database.enums/-generated-by/-a-u-t0_-i-n-c-r-e-m-e-n-t/index.html","searchKeys":["AUT0_INCREMENT","AUT0_INCREMENT","database.enums.GeneratedBy.AUT0_INCREMENT"]},{"name":"BLUE","description":"common.LogColors.BLUE","location":"basic-http/common/-log-colors/-b-l-u-e/index.html","searchKeys":["BLUE","BLUE","common.LogColors.BLUE"]},{"name":"BadRequest","description":"core.domain.response.StatusCode.BadRequest","location":"basic-http/core.domain.response/-status-code/-bad-request/index.html","searchKeys":["BadRequest","BadRequest","core.domain.response.StatusCode.BadRequest"]},{"name":"Created","description":"core.domain.response.StatusCode.Created","location":"basic-http/core.domain.response/-status-code/-created/index.html","searchKeys":["Created","Created","core.domain.response.StatusCode.Created"]},{"name":"DELETE","description":"core.domain.request.RequestMethod.DELETE","location":"basic-http/core.domain.request/-request-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","core.domain.request.RequestMethod.DELETE"]},{"name":"GET","description":"core.domain.request.RequestMethod.GET","location":"basic-http/core.domain.request/-request-method/-g-e-t/index.html","searchKeys":["GET","GET","core.domain.request.RequestMethod.GET"]},{"name":"GREEN","description":"common.LogColors.GREEN","location":"basic-http/common/-log-colors/-g-r-e-e-n/index.html","searchKeys":["GREEN","GREEN","common.LogColors.GREEN"]},{"name":"InternalServerError","description":"core.domain.response.StatusCode.InternalServerError","location":"basic-http/core.domain.response/-status-code/-internal-server-error/index.html","searchKeys":["InternalServerError","InternalServerError","core.domain.response.StatusCode.InternalServerError"]},{"name":"ManyToOne","description":"database.enums.Relation.ManyToOne","location":"basic-http/database.enums/-relation/-many-to-one/index.html","searchKeys":["ManyToOne","ManyToOne","database.enums.Relation.ManyToOne"]},{"name":"NotAllowed","description":"core.domain.response.StatusCode.NotAllowed","location":"basic-http/core.domain.response/-status-code/-not-allowed/index.html","searchKeys":["NotAllowed","NotAllowed","core.domain.response.StatusCode.NotAllowed"]},{"name":"NotFound","description":"core.domain.response.StatusCode.NotFound","location":"basic-http/core.domain.response/-status-code/-not-found/index.html","searchKeys":["NotFound","NotFound","core.domain.response.StatusCode.NotFound"]},{"name":"Ok","description":"core.domain.response.StatusCode.Ok","location":"basic-http/core.domain.response/-status-code/-ok/index.html","searchKeys":["Ok","Ok","core.domain.response.StatusCode.Ok"]},{"name":"OneToMany","description":"database.enums.Relation.OneToMany","location":"basic-http/database.enums/-relation/-one-to-many/index.html","searchKeys":["OneToMany","OneToMany","database.enums.Relation.OneToMany"]},{"name":"POST","description":"core.domain.request.RequestMethod.POST","location":"basic-http/core.domain.request/-request-method/-p-o-s-t/index.html","searchKeys":["POST","POST","core.domain.request.RequestMethod.POST"]},{"name":"PUT","description":"core.domain.request.RequestMethod.PUT","location":"basic-http/core.domain.request/-request-method/-p-u-t/index.html","searchKeys":["PUT","PUT","core.domain.request.RequestMethod.PUT"]},{"name":"RED","description":"common.LogColors.RED","location":"basic-http/common/-log-colors/-r-e-d/index.html","searchKeys":["RED","RED","common.LogColors.RED"]},{"name":"RESET","description":"common.LogColors.RESET","location":"basic-http/common/-log-colors/-r-e-s-e-t/index.html","searchKeys":["RESET","RESET","common.LogColors.RESET"]},{"name":"Unauthorized","description":"core.domain.response.StatusCode.Unauthorized","location":"basic-http/core.domain.response/-status-code/-unauthorized/index.html","searchKeys":["Unauthorized","Unauthorized","core.domain.response.StatusCode.Unauthorized"]},{"name":"YELLOW","description":"common.LogColors.YELLOW","location":"basic-http/common/-log-colors/-y-e-l-l-o-w/index.html","searchKeys":["YELLOW","YELLOW","common.LogColors.YELLOW"]},{"name":"abstract class BasicOrm<T : Any>(val entityClass: KClass<T>)","description":"database.config.BasicOrm","location":"basic-http/database.config/-basic-orm/index.html","searchKeys":["BasicOrm","abstract class BasicOrm<T : Any>(val entityClass: KClass<T>)","database.config.BasicOrm"]},{"name":"abstract fun closeConnection()","description":"database.interfaces.IBasicOrm.closeConnection","location":"basic-http/database.interfaces/-i-basic-orm/close-connection.html","searchKeys":["closeConnection","abstract fun closeConnection()","database.interfaces.IBasicOrm.closeConnection"]},{"name":"abstract fun createJwt(subject: String): String","description":"core.domain.authentication.IJwtCreator.createJwt","location":"basic-http/core.domain.authentication/-i-jwt-creator/create-jwt.html","searchKeys":["createJwt","abstract fun createJwt(subject: String): String","core.domain.authentication.IJwtCreator.createJwt"]},{"name":"abstract fun deleteOne(entity: T)","description":"database.interfaces.IBasicOrm.deleteOne","location":"basic-http/database.interfaces/-i-basic-orm/delete-one.html","searchKeys":["deleteOne","abstract fun deleteOne(entity: T)","database.interfaces.IBasicOrm.deleteOne"]},{"name":"abstract fun findAll(): MutableList<T>","description":"database.interfaces.IBasicOrm.findAll","location":"basic-http/database.interfaces/-i-basic-orm/find-all.html","searchKeys":["findAll","abstract fun findAll(): MutableList<T>","database.interfaces.IBasicOrm.findAll"]},{"name":"abstract fun findOne(id: Any): T?","description":"database.interfaces.IBasicOrm.findOne","location":"basic-http/database.interfaces/-i-basic-orm/find-one.html","searchKeys":["findOne","abstract fun findOne(id: Any): T?","database.interfaces.IBasicOrm.findOne"]},{"name":"abstract fun insert(entity: T)","description":"database.interfaces.IBasicOrm.insert","location":"basic-http/database.interfaces/-i-basic-orm/insert.html","searchKeys":["insert","abstract fun insert(entity: T)","database.interfaces.IBasicOrm.insert"]},{"name":"abstract fun updateOne(entity: T)","description":"database.interfaces.IBasicOrm.updateOne","location":"basic-http/database.interfaces/-i-basic-orm/update-one.html","searchKeys":["updateOne","abstract fun updateOne(entity: T)","database.interfaces.IBasicOrm.updateOne"]},{"name":"annotation class Body","description":"core.domain.request.Body","location":"basic-http/core.domain.request/-body/index.html","searchKeys":["Body","annotation class Body","core.domain.request.Body"]},{"name":"annotation class Column(val name: String = \"\")","description":"database.annotations.Column","location":"basic-http/database.annotations/-column/index.html","searchKeys":["Column","annotation class Column(val name: String = \"\")","database.annotations.Column"]},{"name":"annotation class Controller","description":"core.domain.controller.Controller","location":"basic-http/core.domain.controller/-controller/index.html","searchKeys":["Controller","annotation class Controller","core.domain.controller.Controller"]},{"name":"annotation class Id(val type: GeneratedBy)","description":"database.annotations.Id","location":"basic-http/database.annotations/-id/index.html","searchKeys":["Id","annotation class Id(val type: GeneratedBy)","database.annotations.Id"]},{"name":"annotation class Injectable","description":"core.domain.di.Injectable","location":"basic-http/core.domain.di/-injectable/index.html","searchKeys":["Injectable","annotation class Injectable","core.domain.di.Injectable"]},{"name":"annotation class JoinColumn(val name: String = \"\", val type: Relation)","description":"database.annotations.JoinColumn","location":"basic-http/database.annotations/-join-column/index.html","searchKeys":["JoinColumn","annotation class JoinColumn(val name: String = \"\", val type: Relation)","database.annotations.JoinColumn"]},{"name":"annotation class Mapping(val path: String, val method: RequestMethod)","description":"core.domain.request.Mapping","location":"basic-http/core.domain.request/-mapping/index.html","searchKeys":["Mapping","annotation class Mapping(val path: String, val method: RequestMethod)","core.domain.request.Mapping"]},{"name":"annotation class PathParam","description":"core.domain.request.PathParam","location":"basic-http/core.domain.request/-path-param/index.html","searchKeys":["PathParam","annotation class PathParam","core.domain.request.PathParam"]},{"name":"annotation class QueryParam(val key: String)","description":"core.domain.request.QueryParam","location":"basic-http/core.domain.request/-query-param/index.html","searchKeys":["QueryParam","annotation class QueryParam(val key: String)","core.domain.request.QueryParam"]},{"name":"annotation class Table(val name: String = \"\")","description":"database.annotations.Table","location":"basic-http/database.annotations/-table/index.html","searchKeys":["Table","annotation class Table(val name: String = \"\")","database.annotations.Table"]},{"name":"annotation class UseAuthentication","description":"core.domain.authentication.UseAuthentication","location":"basic-http/core.domain.authentication/-use-authentication/index.html","searchKeys":["UseAuthentication","annotation class UseAuthentication","core.domain.authentication.UseAuthentication"]},{"name":"class AuthenticationHandlerFilter(method: Method) : Filter, HttpHandlerExtensions","description":"core.server.filters.AuthenticationHandlerFilter","location":"basic-http/core.server.filters/-authentication-handler-filter/index.html","searchKeys":["AuthenticationHandlerFilter","class AuthenticationHandlerFilter(method: Method) : Filter, HttpHandlerExtensions","core.server.filters.AuthenticationHandlerFilter"]},{"name":"class BasicOrmError(msg: String) : RuntimeException","description":"database.exceptions.BasicOrmError","location":"basic-http/database.exceptions/-basic-orm-error/index.html","searchKeys":["BasicOrmError","class BasicOrmError(msg: String) : RuntimeException","database.exceptions.BasicOrmError"]},{"name":"class ControllersDependencyInjectionConfig(server: HttpServer)","description":"core.server.config.ControllersDependencyInjectionConfig","location":"basic-http/core.server.config/-controllers-dependency-injection-config/index.html","searchKeys":["ControllersDependencyInjectionConfig","class ControllersDependencyInjectionConfig(server: HttpServer)","core.server.config.ControllersDependencyInjectionConfig"]},{"name":"class DependencyInjectionResolver<out T>(clazz: Class<*>)","description":"core.di.DependencyInjectionResolver","location":"basic-http/core.di/-dependency-injection-resolver/index.html","searchKeys":["DependencyInjectionResolver","class DependencyInjectionResolver<out T>(clazz: Class<*>)","core.di.DependencyInjectionResolver"]},{"name":"class HttpContextConfig(server: HttpServer)","description":"core.server.config.HttpContextConfig","location":"basic-http/core.server.config/-http-context-config/index.html","searchKeys":["HttpContextConfig","class HttpContextConfig(server: HttpServer)","core.server.config.HttpContextConfig"]},{"name":"class JwtCreator(secretKey: String) : IJwtCreator","description":"core.domain.authentication.JwtCreator","location":"basic-http/core.domain.authentication/-jwt-creator/index.html","searchKeys":["JwtCreator","class JwtCreator(secretKey: String) : IJwtCreator","core.domain.authentication.JwtCreator"]},{"name":"class JwtValidator(secretKey: String)","description":"core.domain.authentication.JwtValidator","location":"basic-http/core.domain.authentication/-jwt-validator/index.html","searchKeys":["JwtValidator","class JwtValidator(secretKey: String)","core.domain.authentication.JwtValidator"]},{"name":"class PreRequestHandlerLogFilter : Filter","description":"core.server.filters.PreRequestHandlerLogFilter","location":"basic-http/core.server.filters/-pre-request-handler-log-filter/index.html","searchKeys":["PreRequestHandlerLogFilter","class PreRequestHandlerLogFilter : Filter","core.server.filters.PreRequestHandlerLogFilter"]},{"name":"class RequestHttpHandler(resource: BaseController, method: Method, path: String) : HttpHandler, HttpHandlerExtensions","description":"core.server.handlers.RequestHttpHandler","location":"basic-http/core.server.handlers/-request-http-handler/index.html","searchKeys":["RequestHttpHandler","class RequestHttpHandler(resource: BaseController, method: Method, path: String) : HttpHandler, HttpHandlerExtensions","core.server.handlers.RequestHttpHandler"]},{"name":"class RequestValidationHandlerFilter(method: Method, methodHasPathParam: Boolean) : Filter, HttpHandlerExtensions","description":"core.server.filters.RequestValidationHandlerFilter","location":"basic-http/core.server.filters/-request-validation-handler-filter/index.html","searchKeys":["RequestValidationHandlerFilter","class RequestValidationHandlerFilter(method: Method, methodHasPathParam: Boolean) : Filter, HttpHandlerExtensions","core.server.filters.RequestValidationHandlerFilter"]},{"name":"constructor()","description":"core.server.filters.PreRequestHandlerLogFilter.PreRequestHandlerLogFilter","location":"basic-http/core.server.filters/-pre-request-handler-log-filter/-pre-request-handler-log-filter.html","searchKeys":["PreRequestHandlerLogFilter","constructor()","core.server.filters.PreRequestHandlerLogFilter.PreRequestHandlerLogFilter"]},{"name":"constructor(clazz: Class<*>)","description":"core.di.DependencyInjectionResolver.DependencyInjectionResolver","location":"basic-http/core.di/-dependency-injection-resolver/-dependency-injection-resolver.html","searchKeys":["DependencyInjectionResolver","constructor(clazz: Class<*>)","core.di.DependencyInjectionResolver.DependencyInjectionResolver"]},{"name":"constructor(entityClass: KClass<T>)","description":"database.config.BasicOrm.BasicOrm","location":"basic-http/database.config/-basic-orm/-basic-orm.html","searchKeys":["BasicOrm","constructor(entityClass: KClass<T>)","database.config.BasicOrm.BasicOrm"]},{"name":"constructor(message: String, code: Int, data: T? = null)","description":"core.domain.response.Json.Json","location":"basic-http/core.domain.response/-json/-json.html","searchKeys":["Json","constructor(message: String, code: Int, data: T? = null)","core.domain.response.Json.Json"]},{"name":"constructor(message: String, statusCode: StatusCode, data: T? = null)","description":"core.domain.response.Json.Json","location":"basic-http/core.domain.response/-json/-json.html","searchKeys":["Json","constructor(message: String, statusCode: StatusCode, data: T? = null)","core.domain.response.Json.Json"]},{"name":"constructor(method: Method)","description":"core.server.filters.AuthenticationHandlerFilter.AuthenticationHandlerFilter","location":"basic-http/core.server.filters/-authentication-handler-filter/-authentication-handler-filter.html","searchKeys":["AuthenticationHandlerFilter","constructor(method: Method)","core.server.filters.AuthenticationHandlerFilter.AuthenticationHandlerFilter"]},{"name":"constructor(method: Method, methodHasPathParam: Boolean)","description":"core.server.filters.RequestValidationHandlerFilter.RequestValidationHandlerFilter","location":"basic-http/core.server.filters/-request-validation-handler-filter/-request-validation-handler-filter.html","searchKeys":["RequestValidationHandlerFilter","constructor(method: Method, methodHasPathParam: Boolean)","core.server.filters.RequestValidationHandlerFilter.RequestValidationHandlerFilter"]},{"name":"constructor(msg: String)","description":"database.exceptions.BasicOrmError.BasicOrmError","location":"basic-http/database.exceptions/-basic-orm-error/-basic-orm-error.html","searchKeys":["BasicOrmError","constructor(msg: String)","database.exceptions.BasicOrmError.BasicOrmError"]},{"name":"constructor(resource: BaseController, method: Method, path: String)","description":"core.server.handlers.RequestHttpHandler.RequestHttpHandler","location":"basic-http/core.server.handlers/-request-http-handler/-request-http-handler.html","searchKeys":["RequestHttpHandler","constructor(resource: BaseController, method: Method, path: String)","core.server.handlers.RequestHttpHandler.RequestHttpHandler"]},{"name":"constructor(secretKey: String)","description":"core.domain.authentication.JwtCreator.JwtCreator","location":"basic-http/core.domain.authentication/-jwt-creator/-jwt-creator.html","searchKeys":["JwtCreator","constructor(secretKey: String)","core.domain.authentication.JwtCreator.JwtCreator"]},{"name":"constructor(secretKey: String)","description":"core.domain.authentication.JwtValidator.JwtValidator","location":"basic-http/core.domain.authentication/-jwt-validator/-jwt-validator.html","searchKeys":["JwtValidator","constructor(secretKey: String)","core.domain.authentication.JwtValidator.JwtValidator"]},{"name":"constructor(server: HttpServer)","description":"core.server.config.ControllersDependencyInjectionConfig.ControllersDependencyInjectionConfig","location":"basic-http/core.server.config/-controllers-dependency-injection-config/-controllers-dependency-injection-config.html","searchKeys":["ControllersDependencyInjectionConfig","constructor(server: HttpServer)","core.server.config.ControllersDependencyInjectionConfig.ControllersDependencyInjectionConfig"]},{"name":"constructor(server: HttpServer)","description":"core.server.config.HttpContextConfig.HttpContextConfig","location":"basic-http/core.server.config/-http-context-config/-http-context-config.html","searchKeys":["HttpContextConfig","constructor(server: HttpServer)","core.server.config.HttpContextConfig.HttpContextConfig"]},{"name":"data class Json<T>(val message: String, val code: Int, val data: T? = null)","description":"core.domain.response.Json","location":"basic-http/core.domain.response/-json/index.html","searchKeys":["Json","data class Json<T>(val message: String, val code: Int, val data: T? = null)","core.domain.response.Json"]},{"name":"enum GeneratedBy : Enum<GeneratedBy> ","description":"database.enums.GeneratedBy","location":"basic-http/database.enums/-generated-by/index.html","searchKeys":["GeneratedBy","enum GeneratedBy : Enum<GeneratedBy> ","database.enums.GeneratedBy"]},{"name":"enum LogColors : Enum<LogColors> ","description":"common.LogColors","location":"basic-http/common/-log-colors/index.html","searchKeys":["LogColors","enum LogColors : Enum<LogColors> ","common.LogColors"]},{"name":"enum Relation : Enum<Relation> ","description":"database.enums.Relation","location":"basic-http/database.enums/-relation/index.html","searchKeys":["Relation","enum Relation : Enum<Relation> ","database.enums.Relation"]},{"name":"enum RequestMethod : Enum<RequestMethod> ","description":"core.domain.request.RequestMethod","location":"basic-http/core.domain.request/-request-method/index.html","searchKeys":["RequestMethod","enum RequestMethod : Enum<RequestMethod> ","core.domain.request.RequestMethod"]},{"name":"enum StatusCode : Enum<StatusCode> ","description":"core.domain.response.StatusCode","location":"basic-http/core.domain.response/-status-code/index.html","searchKeys":["StatusCode","enum StatusCode : Enum<StatusCode> ","core.domain.response.StatusCode"]},{"name":"fun <T : Any> getBean(clazz: Class<*>): T","description":"core.di.DIContainer.getBean","location":"basic-http/core.di/-d-i-container/get-bean.html","searchKeys":["getBean","fun <T : Any> getBean(clazz: Class<*>): T","core.di.DIContainer.getBean"]},{"name":"fun closeConnection()","description":"database.config.BasicOrm.closeConnection","location":"basic-http/database.config/-basic-orm/close-connection.html","searchKeys":["closeConnection","fun closeConnection()","database.config.BasicOrm.closeConnection"]},{"name":"fun createContexts(resource: BaseController)","description":"core.server.config.HttpContextConfig.createContexts","location":"basic-http/core.server.config/-http-context-config/create-contexts.html","searchKeys":["createContexts","fun createContexts(resource: BaseController)","core.server.config.HttpContextConfig.createContexts"]},{"name":"fun deleteOne(entity: T)","description":"database.config.BasicOrm.deleteOne","location":"basic-http/database.config/-basic-orm/delete-one.html","searchKeys":["deleteOne","fun deleteOne(entity: T)","database.config.BasicOrm.deleteOne"]},{"name":"fun findAll(): MutableList<T>","description":"database.config.BasicOrm.findAll","location":"basic-http/database.config/-basic-orm/find-all.html","searchKeys":["findAll","fun findAll(): MutableList<T>","database.config.BasicOrm.findAll"]},{"name":"fun findOne(id: Any): T?","description":"database.config.BasicOrm.findOne","location":"basic-http/database.config/-basic-orm/find-one.html","searchKeys":["findOne","fun findOne(id: Any): T?","database.config.BasicOrm.findOne"]},{"name":"fun getInstance(): T","description":"core.di.DependencyInjectionResolver.getInstance","location":"basic-http/core.di/-dependency-injection-resolver/get-instance.html","searchKeys":["getInstance","fun getInstance(): T","core.di.DependencyInjectionResolver.getInstance"]},{"name":"fun initializeDI()","description":"core.di.DIContainer.initializeDI","location":"basic-http/core.di/-d-i-container/initialize-d-i.html","searchKeys":["initializeDI","fun initializeDI()","core.di.DIContainer.initializeDI"]},{"name":"fun insert(entity: T)","description":"database.config.BasicOrm.insert","location":"basic-http/database.config/-basic-orm/insert.html","searchKeys":["insert","fun insert(entity: T)","database.config.BasicOrm.insert"]},{"name":"fun startServer()","description":"core.server.config.BasicHttpConfig.startServer","location":"basic-http/core.server.config/-basic-http-config/start-server.html","searchKeys":["startServer","fun startServer()","core.server.config.BasicHttpConfig.startServer"]},{"name":"fun stopServer()","description":"core.server.config.BasicHttpConfig.stopServer","location":"basic-http/core.server.config/-basic-http-config/stop-server.html","searchKeys":["stopServer","fun stopServer()","core.server.config.BasicHttpConfig.stopServer"]},{"name":"fun updateOne(entity: T)","description":"database.config.BasicOrm.updateOne","location":"basic-http/database.config/-basic-orm/update-one.html","searchKeys":["updateOne","fun updateOne(entity: T)","database.config.BasicOrm.updateOne"]},{"name":"fun valueOf(value: String): GeneratedBy","description":"database.enums.GeneratedBy.valueOf","location":"basic-http/database.enums/-generated-by/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GeneratedBy","database.enums.GeneratedBy.valueOf"]},{"name":"fun valueOf(value: String): LogColors","description":"common.LogColors.valueOf","location":"basic-http/common/-log-colors/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogColors","common.LogColors.valueOf"]},{"name":"fun valueOf(value: String): Relation","description":"database.enums.Relation.valueOf","location":"basic-http/database.enums/-relation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Relation","database.enums.Relation.valueOf"]},{"name":"fun valueOf(value: String): RequestMethod","description":"core.domain.request.RequestMethod.valueOf","location":"basic-http/core.domain.request/-request-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RequestMethod","core.domain.request.RequestMethod.valueOf"]},{"name":"fun valueOf(value: String): StatusCode","description":"core.domain.response.StatusCode.valueOf","location":"basic-http/core.domain.response/-status-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatusCode","core.domain.response.StatusCode.valueOf"]},{"name":"fun values(): Array<GeneratedBy>","description":"database.enums.GeneratedBy.values","location":"basic-http/database.enums/-generated-by/values.html","searchKeys":["values","fun values(): Array<GeneratedBy>","database.enums.GeneratedBy.values"]},{"name":"fun values(): Array<LogColors>","description":"common.LogColors.values","location":"basic-http/common/-log-colors/values.html","searchKeys":["values","fun values(): Array<LogColors>","common.LogColors.values"]},{"name":"fun values(): Array<Relation>","description":"database.enums.Relation.values","location":"basic-http/database.enums/-relation/values.html","searchKeys":["values","fun values(): Array<Relation>","database.enums.Relation.values"]},{"name":"fun values(): Array<RequestMethod>","description":"core.domain.request.RequestMethod.values","location":"basic-http/core.domain.request/-request-method/values.html","searchKeys":["values","fun values(): Array<RequestMethod>","core.domain.request.RequestMethod.values"]},{"name":"fun values(): Array<StatusCode>","description":"core.domain.response.StatusCode.values","location":"basic-http/core.domain.response/-status-code/values.html","searchKeys":["values","fun values(): Array<StatusCode>","core.domain.response.StatusCode.values"]},{"name":"fun verifyToken(token: String): Boolean","description":"core.domain.authentication.JwtValidator.verifyToken","location":"basic-http/core.domain.authentication/-jwt-validator/verify-token.html","searchKeys":["verifyToken","fun verifyToken(token: String): Boolean","core.domain.authentication.JwtValidator.verifyToken"]},{"name":"fun withReflection()","description":"core.server.config.ControllersDependencyInjectionConfig.withReflection","location":"basic-http/core.server.config/-controllers-dependency-injection-config/with-reflection.html","searchKeys":["withReflection","fun withReflection()","core.server.config.ControllersDependencyInjectionConfig.withReflection"]},{"name":"inline fun <T> getLogWithColorFor(color: LogColors, msg: String)","description":"common.BasicLog.getLogWithColorFor","location":"basic-http/common/-basic-log/get-log-with-color-for.html","searchKeys":["getLogWithColorFor","inline fun <T> getLogWithColorFor(color: LogColors, msg: String)","common.BasicLog.getLogWithColorFor"]},{"name":"interface BaseController","description":"core.domain.controller.BaseController","location":"basic-http/core.domain.controller/-base-controller/index.html","searchKeys":["BaseController","interface BaseController","core.domain.controller.BaseController"]},{"name":"interface HttpHandlerExtensions","description":"core.server.extensions.HttpHandlerExtensions","location":"basic-http/core.server.extensions/-http-handler-extensions/index.html","searchKeys":["HttpHandlerExtensions","interface HttpHandlerExtensions","core.server.extensions.HttpHandlerExtensions"]},{"name":"interface IBasicOrm<T : Any>","description":"database.interfaces.IBasicOrm","location":"basic-http/database.interfaces/-i-basic-orm/index.html","searchKeys":["IBasicOrm","interface IBasicOrm<T : Any>","database.interfaces.IBasicOrm"]},{"name":"interface IJwtCreator","description":"core.domain.authentication.IJwtCreator","location":"basic-http/core.domain.authentication/-i-jwt-creator/index.html","searchKeys":["IJwtCreator","interface IJwtCreator","core.domain.authentication.IJwtCreator"]},{"name":"object BasicHttpConfig","description":"core.server.config.BasicHttpConfig","location":"basic-http/core.server.config/-basic-http-config/index.html","searchKeys":["BasicHttpConfig","object BasicHttpConfig","core.server.config.BasicHttpConfig"]},{"name":"object BasicLog","description":"common.BasicLog","location":"basic-http/common/-basic-log/index.html","searchKeys":["BasicLog","object BasicLog","common.BasicLog"]},{"name":"object DIContainer","description":"core.di.DIContainer","location":"basic-http/core.di/-d-i-container/index.html","searchKeys":["DIContainer","object DIContainer","core.di.DIContainer"]},{"name":"open fun HttpExchange.send(json: Json<Any>)","description":"core.server.extensions.HttpHandlerExtensions.send","location":"basic-http/core.server.extensions/-http-handler-extensions/send.html","searchKeys":["send","open fun HttpExchange.send(json: Json<Any>)","core.server.extensions.HttpHandlerExtensions.send"]},{"name":"open fun Json<Any>.toJsonString(): String","description":"core.server.extensions.HttpHandlerExtensions.toJsonString","location":"basic-http/core.server.extensions/-http-handler-extensions/to-json-string.html","searchKeys":["toJsonString","open fun Json<Any>.toJsonString(): String","core.server.extensions.HttpHandlerExtensions.toJsonString"]},{"name":"open fun String.jsonToObject(typeName: String): Any","description":"core.server.extensions.HttpHandlerExtensions.jsonToObject","location":"basic-http/core.server.extensions/-http-handler-extensions/json-to-object.html","searchKeys":["jsonToObject","open fun String.jsonToObject(typeName: String): Any","core.server.extensions.HttpHandlerExtensions.jsonToObject"]},{"name":"open fun String.toMapIfQuery(): Map<String, String>","description":"core.server.extensions.HttpHandlerExtensions.toMapIfQuery","location":"basic-http/core.server.extensions/-http-handler-extensions/to-map-if-query.html","searchKeys":["toMapIfQuery","open fun String.toMapIfQuery(): Map<String, String>","core.server.extensions.HttpHandlerExtensions.toMapIfQuery"]},{"name":"open infix fun String.parseTo(typeForParse: String): Any?","description":"core.server.extensions.HttpHandlerExtensions.parseTo","location":"basic-http/core.server.extensions/-http-handler-extensions/parse-to.html","searchKeys":["parseTo","open infix fun String.parseTo(typeForParse: String): Any?","core.server.extensions.HttpHandlerExtensions.parseTo"]},{"name":"open override fun createJwt(subject: String): String","description":"core.domain.authentication.JwtCreator.createJwt","location":"basic-http/core.domain.authentication/-jwt-creator/create-jwt.html","searchKeys":["createJwt","open override fun createJwt(subject: String): String","core.domain.authentication.JwtCreator.createJwt"]},{"name":"open override fun description(): String","description":"core.server.filters.AuthenticationHandlerFilter.description","location":"basic-http/core.server.filters/-authentication-handler-filter/description.html","searchKeys":["description","open override fun description(): String","core.server.filters.AuthenticationHandlerFilter.description"]},{"name":"open override fun description(): String","description":"core.server.filters.PreRequestHandlerLogFilter.description","location":"basic-http/core.server.filters/-pre-request-handler-log-filter/description.html","searchKeys":["description","open override fun description(): String","core.server.filters.PreRequestHandlerLogFilter.description"]},{"name":"open override fun description(): String","description":"core.server.filters.RequestValidationHandlerFilter.description","location":"basic-http/core.server.filters/-request-validation-handler-filter/description.html","searchKeys":["description","open override fun description(): String","core.server.filters.RequestValidationHandlerFilter.description"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.server.filters.AuthenticationHandlerFilter.doFilter","location":"basic-http/core.server.filters/-authentication-handler-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.server.filters.AuthenticationHandlerFilter.doFilter"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.server.filters.PreRequestHandlerLogFilter.doFilter","location":"basic-http/core.server.filters/-pre-request-handler-log-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.server.filters.PreRequestHandlerLogFilter.doFilter"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.server.filters.RequestValidationHandlerFilter.doFilter","location":"basic-http/core.server.filters/-request-validation-handler-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.server.filters.RequestValidationHandlerFilter.doFilter"]},{"name":"open override fun handle(exchange: HttpExchange)","description":"core.server.handlers.RequestHttpHandler.handle","location":"basic-http/core.server.handlers/-request-http-handler/handle.html","searchKeys":["handle","open override fun handle(exchange: HttpExchange)","core.server.handlers.RequestHttpHandler.handle"]},{"name":"val ansiCode: String","description":"common.LogColors.ansiCode","location":"basic-http/common/-log-colors/ansi-code.html","searchKeys":["ansiCode","val ansiCode: String","common.LogColors.ansiCode"]},{"name":"val code: Int","description":"core.domain.response.Json.code","location":"basic-http/core.domain.response/-json/code.html","searchKeys":["code","val code: Int","core.domain.response.Json.code"]},{"name":"val code: Int","description":"core.domain.response.StatusCode.code","location":"basic-http/core.domain.response/-status-code/code.html","searchKeys":["code","val code: Int","core.domain.response.StatusCode.code"]},{"name":"val data: T? = null","description":"core.domain.response.Json.data","location":"basic-http/core.domain.response/-json/data.html","searchKeys":["data","val data: T? = null","core.domain.response.Json.data"]},{"name":"val entityClass: KClass<T>","description":"database.config.BasicOrm.entityClass","location":"basic-http/database.config/-basic-orm/entity-class.html","searchKeys":["entityClass","val entityClass: KClass<T>","database.config.BasicOrm.entityClass"]},{"name":"val entries: EnumEntries<GeneratedBy>","description":"database.enums.GeneratedBy.entries","location":"basic-http/database.enums/-generated-by/entries.html","searchKeys":["entries","val entries: EnumEntries<GeneratedBy>","database.enums.GeneratedBy.entries"]},{"name":"val entries: EnumEntries<LogColors>","description":"common.LogColors.entries","location":"basic-http/common/-log-colors/entries.html","searchKeys":["entries","val entries: EnumEntries<LogColors>","common.LogColors.entries"]},{"name":"val entries: EnumEntries<Relation>","description":"database.enums.Relation.entries","location":"basic-http/database.enums/-relation/entries.html","searchKeys":["entries","val entries: EnumEntries<Relation>","database.enums.Relation.entries"]},{"name":"val entries: EnumEntries<RequestMethod>","description":"core.domain.request.RequestMethod.entries","location":"basic-http/core.domain.request/-request-method/entries.html","searchKeys":["entries","val entries: EnumEntries<RequestMethod>","core.domain.request.RequestMethod.entries"]},{"name":"val entries: EnumEntries<StatusCode>","description":"core.domain.response.StatusCode.entries","location":"basic-http/core.domain.response/-status-code/entries.html","searchKeys":["entries","val entries: EnumEntries<StatusCode>","core.domain.response.StatusCode.entries"]},{"name":"val key: String","description":"core.domain.request.QueryParam.key","location":"basic-http/core.domain.request/-query-param/key.html","searchKeys":["key","val key: String","core.domain.request.QueryParam.key"]},{"name":"val message: String","description":"core.domain.response.Json.message","location":"basic-http/core.domain.response/-json/message.html","searchKeys":["message","val message: String","core.domain.response.Json.message"]},{"name":"val method: RequestMethod","description":"core.domain.request.Mapping.method","location":"basic-http/core.domain.request/-mapping/method.html","searchKeys":["method","val method: RequestMethod","core.domain.request.Mapping.method"]},{"name":"val name: String","description":"database.annotations.Column.name","location":"basic-http/database.annotations/-column/name.html","searchKeys":["name","val name: String","database.annotations.Column.name"]},{"name":"val name: String","description":"database.annotations.JoinColumn.name","location":"basic-http/database.annotations/-join-column/name.html","searchKeys":["name","val name: String","database.annotations.JoinColumn.name"]},{"name":"val name: String","description":"database.annotations.Table.name","location":"basic-http/database.annotations/-table/name.html","searchKeys":["name","val name: String","database.annotations.Table.name"]},{"name":"val path: String","description":"core.domain.request.Mapping.path","location":"basic-http/core.domain.request/-mapping/path.html","searchKeys":["path","val path: String","core.domain.request.Mapping.path"]},{"name":"val type: GeneratedBy","description":"database.annotations.Id.type","location":"basic-http/database.annotations/-id/type.html","searchKeys":["type","val type: GeneratedBy","database.annotations.Id.type"]},{"name":"val type: Relation","description":"database.annotations.JoinColumn.type","location":"basic-http/database.annotations/-join-column/type.html","searchKeys":["type","val type: Relation","database.annotations.JoinColumn.type"]},{"name":"var connection: Connection","description":"database.config.BasicOrm.connection","location":"basic-http/database.config/-basic-orm/connection.html","searchKeys":["connection","var connection: Connection","database.config.BasicOrm.connection"]}]