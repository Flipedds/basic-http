[{"name":"BLUE","description":"core.enums.LogColors.BLUE","location":"basic-http/core.enums/-log-colors/-b-l-u-e/index.html","searchKeys":["BLUE","BLUE","core.enums.LogColors.BLUE"]},{"name":"BadRequest","description":"core.enums.StatusCode.BadRequest","location":"basic-http/core.enums/-status-code/-bad-request/index.html","searchKeys":["BadRequest","BadRequest","core.enums.StatusCode.BadRequest"]},{"name":"Created","description":"core.enums.StatusCode.Created","location":"basic-http/core.enums/-status-code/-created/index.html","searchKeys":["Created","Created","core.enums.StatusCode.Created"]},{"name":"DELETE","description":"core.enums.RequestMethod.DELETE","location":"basic-http/core.enums/-request-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","core.enums.RequestMethod.DELETE"]},{"name":"GET","description":"core.enums.RequestMethod.GET","location":"basic-http/core.enums/-request-method/-g-e-t/index.html","searchKeys":["GET","GET","core.enums.RequestMethod.GET"]},{"name":"GREEN","description":"core.enums.LogColors.GREEN","location":"basic-http/core.enums/-log-colors/-g-r-e-e-n/index.html","searchKeys":["GREEN","GREEN","core.enums.LogColors.GREEN"]},{"name":"InternalServerError","description":"core.enums.StatusCode.InternalServerError","location":"basic-http/core.enums/-status-code/-internal-server-error/index.html","searchKeys":["InternalServerError","InternalServerError","core.enums.StatusCode.InternalServerError"]},{"name":"NotAllowed","description":"core.enums.StatusCode.NotAllowed","location":"basic-http/core.enums/-status-code/-not-allowed/index.html","searchKeys":["NotAllowed","NotAllowed","core.enums.StatusCode.NotAllowed"]},{"name":"NotFound","description":"core.enums.StatusCode.NotFound","location":"basic-http/core.enums/-status-code/-not-found/index.html","searchKeys":["NotFound","NotFound","core.enums.StatusCode.NotFound"]},{"name":"Ok","description":"core.enums.StatusCode.Ok","location":"basic-http/core.enums/-status-code/-ok/index.html","searchKeys":["Ok","Ok","core.enums.StatusCode.Ok"]},{"name":"POST","description":"core.enums.RequestMethod.POST","location":"basic-http/core.enums/-request-method/-p-o-s-t/index.html","searchKeys":["POST","POST","core.enums.RequestMethod.POST"]},{"name":"PUT","description":"core.enums.RequestMethod.PUT","location":"basic-http/core.enums/-request-method/-p-u-t/index.html","searchKeys":["PUT","PUT","core.enums.RequestMethod.PUT"]},{"name":"RED","description":"core.enums.LogColors.RED","location":"basic-http/core.enums/-log-colors/-r-e-d/index.html","searchKeys":["RED","RED","core.enums.LogColors.RED"]},{"name":"RESET","description":"core.enums.LogColors.RESET","location":"basic-http/core.enums/-log-colors/-r-e-s-e-t/index.html","searchKeys":["RESET","RESET","core.enums.LogColors.RESET"]},{"name":"Unauthorized","description":"core.enums.StatusCode.Unauthorized","location":"basic-http/core.enums/-status-code/-unauthorized/index.html","searchKeys":["Unauthorized","Unauthorized","core.enums.StatusCode.Unauthorized"]},{"name":"YELLOW","description":"core.enums.LogColors.YELLOW","location":"basic-http/core.enums/-log-colors/-y-e-l-l-o-w/index.html","searchKeys":["YELLOW","YELLOW","core.enums.LogColors.YELLOW"]},{"name":"abstract fun createJwt(subject: String): String","description":"core.interfaces.IJwtCreator.createJwt","location":"basic-http/core.interfaces/-i-jwt-creator/create-jwt.html","searchKeys":["createJwt","abstract fun createJwt(subject: String): String","core.interfaces.IJwtCreator.createJwt"]},{"name":"annotation class Body","description":"core.annotations.Body","location":"basic-http/core.annotations/-body/index.html","searchKeys":["Body","annotation class Body","core.annotations.Body"]},{"name":"annotation class Controller","description":"core.annotations.Controller","location":"basic-http/core.annotations/-controller/index.html","searchKeys":["Controller","annotation class Controller","core.annotations.Controller"]},{"name":"annotation class Injectable","description":"core.annotations.Injectable","location":"basic-http/core.annotations/-injectable/index.html","searchKeys":["Injectable","annotation class Injectable","core.annotations.Injectable"]},{"name":"annotation class Mapping(val path: String, val method: RequestMethod)","description":"core.annotations.Mapping","location":"basic-http/core.annotations/-mapping/index.html","searchKeys":["Mapping","annotation class Mapping(val path: String, val method: RequestMethod)","core.annotations.Mapping"]},{"name":"annotation class PathParam","description":"core.annotations.PathParam","location":"basic-http/core.annotations/-path-param/index.html","searchKeys":["PathParam","annotation class PathParam","core.annotations.PathParam"]},{"name":"annotation class QueryParam(val key: String)","description":"core.annotations.QueryParam","location":"basic-http/core.annotations/-query-param/index.html","searchKeys":["QueryParam","annotation class QueryParam(val key: String)","core.annotations.QueryParam"]},{"name":"annotation class UseAuthentication","description":"core.annotations.UseAuthentication","location":"basic-http/core.annotations/-use-authentication/index.html","searchKeys":["UseAuthentication","annotation class UseAuthentication","core.annotations.UseAuthentication"]},{"name":"class AuthenticationHandlerFilter(method: Method) : Filter, HttpHandlerExtensions","description":"core.filters.AuthenticationHandlerFilter","location":"basic-http/core.filters/-authentication-handler-filter/index.html","searchKeys":["AuthenticationHandlerFilter","class AuthenticationHandlerFilter(method: Method) : Filter, HttpHandlerExtensions","core.filters.AuthenticationHandlerFilter"]},{"name":"class ControllersDependencyInjectionConfig(server: HttpServer)","description":"core.config.ControllersDependencyInjectionConfig","location":"basic-http/core.config/-controllers-dependency-injection-config/index.html","searchKeys":["ControllersDependencyInjectionConfig","class ControllersDependencyInjectionConfig(server: HttpServer)","core.config.ControllersDependencyInjectionConfig"]},{"name":"class DependencyInjectionResolver<out T>(clazz: Class<*>)","description":"core.resolvers.DependencyInjectionResolver","location":"basic-http/core.resolvers/-dependency-injection-resolver/index.html","searchKeys":["DependencyInjectionResolver","class DependencyInjectionResolver<out T>(clazz: Class<*>)","core.resolvers.DependencyInjectionResolver"]},{"name":"class HttpContextConfig(server: HttpServer)","description":"core.config.HttpContextConfig","location":"basic-http/core.config/-http-context-config/index.html","searchKeys":["HttpContextConfig","class HttpContextConfig(server: HttpServer)","core.config.HttpContextConfig"]},{"name":"class JwtCreator(secretKey: String) : IJwtCreator","description":"core.authentication.JwtCreator","location":"basic-http/core.authentication/-jwt-creator/index.html","searchKeys":["JwtCreator","class JwtCreator(secretKey: String) : IJwtCreator","core.authentication.JwtCreator"]},{"name":"class JwtValidator(secretKey: String)","description":"core.authentication.JwtValidator","location":"basic-http/core.authentication/-jwt-validator/index.html","searchKeys":["JwtValidator","class JwtValidator(secretKey: String)","core.authentication.JwtValidator"]},{"name":"class PreRequestHandlerLogFilter : Filter","description":"core.filters.PreRequestHandlerLogFilter","location":"basic-http/core.filters/-pre-request-handler-log-filter/index.html","searchKeys":["PreRequestHandlerLogFilter","class PreRequestHandlerLogFilter : Filter","core.filters.PreRequestHandlerLogFilter"]},{"name":"class RequestHttpHandler(resource: BaseController, method: Method, path: String) : HttpHandler, HttpHandlerExtensions","description":"core.handlers.RequestHttpHandler","location":"basic-http/core.handlers/-request-http-handler/index.html","searchKeys":["RequestHttpHandler","class RequestHttpHandler(resource: BaseController, method: Method, path: String) : HttpHandler, HttpHandlerExtensions","core.handlers.RequestHttpHandler"]},{"name":"class RequestValidationHandlerFilter(method: Method, methodHasPathParam: Boolean) : Filter, HttpHandlerExtensions","description":"core.filters.RequestValidationHandlerFilter","location":"basic-http/core.filters/-request-validation-handler-filter/index.html","searchKeys":["RequestValidationHandlerFilter","class RequestValidationHandlerFilter(method: Method, methodHasPathParam: Boolean) : Filter, HttpHandlerExtensions","core.filters.RequestValidationHandlerFilter"]},{"name":"constructor()","description":"core.filters.PreRequestHandlerLogFilter.PreRequestHandlerLogFilter","location":"basic-http/core.filters/-pre-request-handler-log-filter/-pre-request-handler-log-filter.html","searchKeys":["PreRequestHandlerLogFilter","constructor()","core.filters.PreRequestHandlerLogFilter.PreRequestHandlerLogFilter"]},{"name":"constructor(clazz: Class<*>)","description":"core.resolvers.DependencyInjectionResolver.DependencyInjectionResolver","location":"basic-http/core.resolvers/-dependency-injection-resolver/-dependency-injection-resolver.html","searchKeys":["DependencyInjectionResolver","constructor(clazz: Class<*>)","core.resolvers.DependencyInjectionResolver.DependencyInjectionResolver"]},{"name":"constructor(message: String, code: Int, data: T? = null)","description":"core.domain.Json.Json","location":"basic-http/core.domain/-json/-json.html","searchKeys":["Json","constructor(message: String, code: Int, data: T? = null)","core.domain.Json.Json"]},{"name":"constructor(message: String, statusCode: StatusCode, data: T? = null)","description":"core.domain.Json.Json","location":"basic-http/core.domain/-json/-json.html","searchKeys":["Json","constructor(message: String, statusCode: StatusCode, data: T? = null)","core.domain.Json.Json"]},{"name":"constructor(method: Method)","description":"core.filters.AuthenticationHandlerFilter.AuthenticationHandlerFilter","location":"basic-http/core.filters/-authentication-handler-filter/-authentication-handler-filter.html","searchKeys":["AuthenticationHandlerFilter","constructor(method: Method)","core.filters.AuthenticationHandlerFilter.AuthenticationHandlerFilter"]},{"name":"constructor(method: Method, methodHasPathParam: Boolean)","description":"core.filters.RequestValidationHandlerFilter.RequestValidationHandlerFilter","location":"basic-http/core.filters/-request-validation-handler-filter/-request-validation-handler-filter.html","searchKeys":["RequestValidationHandlerFilter","constructor(method: Method, methodHasPathParam: Boolean)","core.filters.RequestValidationHandlerFilter.RequestValidationHandlerFilter"]},{"name":"constructor(resource: BaseController, method: Method, path: String)","description":"core.handlers.RequestHttpHandler.RequestHttpHandler","location":"basic-http/core.handlers/-request-http-handler/-request-http-handler.html","searchKeys":["RequestHttpHandler","constructor(resource: BaseController, method: Method, path: String)","core.handlers.RequestHttpHandler.RequestHttpHandler"]},{"name":"constructor(secretKey: String)","description":"core.authentication.JwtCreator.JwtCreator","location":"basic-http/core.authentication/-jwt-creator/-jwt-creator.html","searchKeys":["JwtCreator","constructor(secretKey: String)","core.authentication.JwtCreator.JwtCreator"]},{"name":"constructor(secretKey: String)","description":"core.authentication.JwtValidator.JwtValidator","location":"basic-http/core.authentication/-jwt-validator/-jwt-validator.html","searchKeys":["JwtValidator","constructor(secretKey: String)","core.authentication.JwtValidator.JwtValidator"]},{"name":"constructor(server: HttpServer)","description":"core.config.ControllersDependencyInjectionConfig.ControllersDependencyInjectionConfig","location":"basic-http/core.config/-controllers-dependency-injection-config/-controllers-dependency-injection-config.html","searchKeys":["ControllersDependencyInjectionConfig","constructor(server: HttpServer)","core.config.ControllersDependencyInjectionConfig.ControllersDependencyInjectionConfig"]},{"name":"constructor(server: HttpServer)","description":"core.config.HttpContextConfig.HttpContextConfig","location":"basic-http/core.config/-http-context-config/-http-context-config.html","searchKeys":["HttpContextConfig","constructor(server: HttpServer)","core.config.HttpContextConfig.HttpContextConfig"]},{"name":"data class Json<T>(val message: String, val code: Int, val data: T? = null)","description":"core.domain.Json","location":"basic-http/core.domain/-json/index.html","searchKeys":["Json","data class Json<T>(val message: String, val code: Int, val data: T? = null)","core.domain.Json"]},{"name":"enum LogColors : Enum<LogColors> ","description":"core.enums.LogColors","location":"basic-http/core.enums/-log-colors/index.html","searchKeys":["LogColors","enum LogColors : Enum<LogColors> ","core.enums.LogColors"]},{"name":"enum RequestMethod : Enum<RequestMethod> ","description":"core.enums.RequestMethod","location":"basic-http/core.enums/-request-method/index.html","searchKeys":["RequestMethod","enum RequestMethod : Enum<RequestMethod> ","core.enums.RequestMethod"]},{"name":"enum StatusCode : Enum<StatusCode> ","description":"core.enums.StatusCode","location":"basic-http/core.enums/-status-code/index.html","searchKeys":["StatusCode","enum StatusCode : Enum<StatusCode> ","core.enums.StatusCode"]},{"name":"fun <T : Any> getBean(clazz: Class<*>): T","description":"core.di.DIContainer.getBean","location":"basic-http/core.di/-d-i-container/get-bean.html","searchKeys":["getBean","fun <T : Any> getBean(clazz: Class<*>): T","core.di.DIContainer.getBean"]},{"name":"fun createContexts(resource: BaseController)","description":"core.config.HttpContextConfig.createContexts","location":"basic-http/core.config/-http-context-config/create-contexts.html","searchKeys":["createContexts","fun createContexts(resource: BaseController)","core.config.HttpContextConfig.createContexts"]},{"name":"fun getInstance(): T","description":"core.resolvers.DependencyInjectionResolver.getInstance","location":"basic-http/core.resolvers/-dependency-injection-resolver/get-instance.html","searchKeys":["getInstance","fun getInstance(): T","core.resolvers.DependencyInjectionResolver.getInstance"]},{"name":"fun initializeDI()","description":"core.di.DIContainer.initializeDI","location":"basic-http/core.di/-d-i-container/initialize-d-i.html","searchKeys":["initializeDI","fun initializeDI()","core.di.DIContainer.initializeDI"]},{"name":"fun startServer()","description":"core.config.BasicHttpConfig.startServer","location":"basic-http/core.config/-basic-http-config/start-server.html","searchKeys":["startServer","fun startServer()","core.config.BasicHttpConfig.startServer"]},{"name":"fun stopServer()","description":"core.config.BasicHttpConfig.stopServer","location":"basic-http/core.config/-basic-http-config/stop-server.html","searchKeys":["stopServer","fun stopServer()","core.config.BasicHttpConfig.stopServer"]},{"name":"fun valueOf(value: String): LogColors","description":"core.enums.LogColors.valueOf","location":"basic-http/core.enums/-log-colors/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogColors","core.enums.LogColors.valueOf"]},{"name":"fun valueOf(value: String): RequestMethod","description":"core.enums.RequestMethod.valueOf","location":"basic-http/core.enums/-request-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RequestMethod","core.enums.RequestMethod.valueOf"]},{"name":"fun valueOf(value: String): StatusCode","description":"core.enums.StatusCode.valueOf","location":"basic-http/core.enums/-status-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatusCode","core.enums.StatusCode.valueOf"]},{"name":"fun values(): Array<LogColors>","description":"core.enums.LogColors.values","location":"basic-http/core.enums/-log-colors/values.html","searchKeys":["values","fun values(): Array<LogColors>","core.enums.LogColors.values"]},{"name":"fun values(): Array<RequestMethod>","description":"core.enums.RequestMethod.values","location":"basic-http/core.enums/-request-method/values.html","searchKeys":["values","fun values(): Array<RequestMethod>","core.enums.RequestMethod.values"]},{"name":"fun values(): Array<StatusCode>","description":"core.enums.StatusCode.values","location":"basic-http/core.enums/-status-code/values.html","searchKeys":["values","fun values(): Array<StatusCode>","core.enums.StatusCode.values"]},{"name":"fun verifyToken(token: String): Boolean","description":"core.authentication.JwtValidator.verifyToken","location":"basic-http/core.authentication/-jwt-validator/verify-token.html","searchKeys":["verifyToken","fun verifyToken(token: String): Boolean","core.authentication.JwtValidator.verifyToken"]},{"name":"fun withReflection()","description":"core.config.ControllersDependencyInjectionConfig.withReflection","location":"basic-http/core.config/-controllers-dependency-injection-config/with-reflection.html","searchKeys":["withReflection","fun withReflection()","core.config.ControllersDependencyInjectionConfig.withReflection"]},{"name":"inline fun <T> getLogWithColorFor(color: LogColors, msg: String)","description":"core.logs.BasicLog.getLogWithColorFor","location":"basic-http/core.logs/-basic-log/get-log-with-color-for.html","searchKeys":["getLogWithColorFor","inline fun <T> getLogWithColorFor(color: LogColors, msg: String)","core.logs.BasicLog.getLogWithColorFor"]},{"name":"interface BaseController","description":"core.interfaces.BaseController","location":"basic-http/core.interfaces/-base-controller/index.html","searchKeys":["BaseController","interface BaseController","core.interfaces.BaseController"]},{"name":"interface HttpHandlerExtensions","description":"core.interfaces.HttpHandlerExtensions","location":"basic-http/core.interfaces/-http-handler-extensions/index.html","searchKeys":["HttpHandlerExtensions","interface HttpHandlerExtensions","core.interfaces.HttpHandlerExtensions"]},{"name":"interface IJwtCreator","description":"core.interfaces.IJwtCreator","location":"basic-http/core.interfaces/-i-jwt-creator/index.html","searchKeys":["IJwtCreator","interface IJwtCreator","core.interfaces.IJwtCreator"]},{"name":"object BasicHttpConfig","description":"core.config.BasicHttpConfig","location":"basic-http/core.config/-basic-http-config/index.html","searchKeys":["BasicHttpConfig","object BasicHttpConfig","core.config.BasicHttpConfig"]},{"name":"object BasicLog","description":"core.logs.BasicLog","location":"basic-http/core.logs/-basic-log/index.html","searchKeys":["BasicLog","object BasicLog","core.logs.BasicLog"]},{"name":"object DIContainer","description":"core.di.DIContainer","location":"basic-http/core.di/-d-i-container/index.html","searchKeys":["DIContainer","object DIContainer","core.di.DIContainer"]},{"name":"open fun HttpExchange.send(json: Json<Any>)","description":"core.interfaces.HttpHandlerExtensions.send","location":"basic-http/core.interfaces/-http-handler-extensions/send.html","searchKeys":["send","open fun HttpExchange.send(json: Json<Any>)","core.interfaces.HttpHandlerExtensions.send"]},{"name":"open fun Json<Any>.toJsonString(): String","description":"core.interfaces.HttpHandlerExtensions.toJsonString","location":"basic-http/core.interfaces/-http-handler-extensions/to-json-string.html","searchKeys":["toJsonString","open fun Json<Any>.toJsonString(): String","core.interfaces.HttpHandlerExtensions.toJsonString"]},{"name":"open fun String.jsonToObject(typeName: String): Any","description":"core.interfaces.HttpHandlerExtensions.jsonToObject","location":"basic-http/core.interfaces/-http-handler-extensions/json-to-object.html","searchKeys":["jsonToObject","open fun String.jsonToObject(typeName: String): Any","core.interfaces.HttpHandlerExtensions.jsonToObject"]},{"name":"open fun String.toMapIfQuery(): Map<String, String>","description":"core.interfaces.HttpHandlerExtensions.toMapIfQuery","location":"basic-http/core.interfaces/-http-handler-extensions/to-map-if-query.html","searchKeys":["toMapIfQuery","open fun String.toMapIfQuery(): Map<String, String>","core.interfaces.HttpHandlerExtensions.toMapIfQuery"]},{"name":"open infix fun String.parseTo(typeForParse: String): Any?","description":"core.interfaces.HttpHandlerExtensions.parseTo","location":"basic-http/core.interfaces/-http-handler-extensions/parse-to.html","searchKeys":["parseTo","open infix fun String.parseTo(typeForParse: String): Any?","core.interfaces.HttpHandlerExtensions.parseTo"]},{"name":"open override fun createJwt(subject: String): String","description":"core.authentication.JwtCreator.createJwt","location":"basic-http/core.authentication/-jwt-creator/create-jwt.html","searchKeys":["createJwt","open override fun createJwt(subject: String): String","core.authentication.JwtCreator.createJwt"]},{"name":"open override fun description(): String","description":"core.filters.AuthenticationHandlerFilter.description","location":"basic-http/core.filters/-authentication-handler-filter/description.html","searchKeys":["description","open override fun description(): String","core.filters.AuthenticationHandlerFilter.description"]},{"name":"open override fun description(): String","description":"core.filters.PreRequestHandlerLogFilter.description","location":"basic-http/core.filters/-pre-request-handler-log-filter/description.html","searchKeys":["description","open override fun description(): String","core.filters.PreRequestHandlerLogFilter.description"]},{"name":"open override fun description(): String","description":"core.filters.RequestValidationHandlerFilter.description","location":"basic-http/core.filters/-request-validation-handler-filter/description.html","searchKeys":["description","open override fun description(): String","core.filters.RequestValidationHandlerFilter.description"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.filters.AuthenticationHandlerFilter.doFilter","location":"basic-http/core.filters/-authentication-handler-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.filters.AuthenticationHandlerFilter.doFilter"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.filters.PreRequestHandlerLogFilter.doFilter","location":"basic-http/core.filters/-pre-request-handler-log-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.filters.PreRequestHandlerLogFilter.doFilter"]},{"name":"open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","description":"core.filters.RequestValidationHandlerFilter.doFilter","location":"basic-http/core.filters/-request-validation-handler-filter/do-filter.html","searchKeys":["doFilter","open override fun doFilter(exchange: HttpExchange?, chain: Filter.Chain?)","core.filters.RequestValidationHandlerFilter.doFilter"]},{"name":"open override fun handle(exchange: HttpExchange)","description":"core.handlers.RequestHttpHandler.handle","location":"basic-http/core.handlers/-request-http-handler/handle.html","searchKeys":["handle","open override fun handle(exchange: HttpExchange)","core.handlers.RequestHttpHandler.handle"]},{"name":"val ansiCode: String","description":"core.enums.LogColors.ansiCode","location":"basic-http/core.enums/-log-colors/ansi-code.html","searchKeys":["ansiCode","val ansiCode: String","core.enums.LogColors.ansiCode"]},{"name":"val code: Int","description":"core.domain.Json.code","location":"basic-http/core.domain/-json/code.html","searchKeys":["code","val code: Int","core.domain.Json.code"]},{"name":"val code: Int","description":"core.enums.StatusCode.code","location":"basic-http/core.enums/-status-code/code.html","searchKeys":["code","val code: Int","core.enums.StatusCode.code"]},{"name":"val data: T? = null","description":"core.domain.Json.data","location":"basic-http/core.domain/-json/data.html","searchKeys":["data","val data: T? = null","core.domain.Json.data"]},{"name":"val entries: EnumEntries<LogColors>","description":"core.enums.LogColors.entries","location":"basic-http/core.enums/-log-colors/entries.html","searchKeys":["entries","val entries: EnumEntries<LogColors>","core.enums.LogColors.entries"]},{"name":"val entries: EnumEntries<RequestMethod>","description":"core.enums.RequestMethod.entries","location":"basic-http/core.enums/-request-method/entries.html","searchKeys":["entries","val entries: EnumEntries<RequestMethod>","core.enums.RequestMethod.entries"]},{"name":"val entries: EnumEntries<StatusCode>","description":"core.enums.StatusCode.entries","location":"basic-http/core.enums/-status-code/entries.html","searchKeys":["entries","val entries: EnumEntries<StatusCode>","core.enums.StatusCode.entries"]},{"name":"val key: String","description":"core.annotations.QueryParam.key","location":"basic-http/core.annotations/-query-param/key.html","searchKeys":["key","val key: String","core.annotations.QueryParam.key"]},{"name":"val message: String","description":"core.domain.Json.message","location":"basic-http/core.domain/-json/message.html","searchKeys":["message","val message: String","core.domain.Json.message"]},{"name":"val method: RequestMethod","description":"core.annotations.Mapping.method","location":"basic-http/core.annotations/-mapping/method.html","searchKeys":["method","val method: RequestMethod","core.annotations.Mapping.method"]},{"name":"val path: String","description":"core.annotations.Mapping.path","location":"basic-http/core.annotations/-mapping/path.html","searchKeys":["path","val path: String","core.annotations.Mapping.path"]}]